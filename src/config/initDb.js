const pool = require("../config/db"); // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —á–µ—Ä–µ–∑ –ø—É–ª

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const initializeDatabase = async () => {
  try {
    console.log("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...");

    await pool.query(`
      -- –í–∫–ª—é—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ UUID
      CREATE EXTENSION IF NOT EXISTS "pgcrypto";

      -- –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–æ–ª–µ–π (RBAC)
      CREATE TABLE IF NOT EXISTS users (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        username TEXT UNIQUE NOT NULL,
        email TEXT UNIQUE NOT NULL,
        password_hash TEXT NOT NULL,
        role TEXT CHECK (role IN ('admin', 'user', 'investigator')) NOT NULL DEFAULT 'user',
        created_at TIMESTAMP DEFAULT NOW()
      );

      -- –¢–∞–±–ª–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ (—Å—ã—Ä—ã–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—ã)
      CREATE TABLE IF NOT EXISTS uploaded_videos (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        user_id UUID REFERENCES users(id) ON DELETE CASCADE,
        original_filename TEXT NOT NULL,
        title TEXT DEFAULT 'Untitled',
        description TEXT DEFAULT '',
        raw_video BYTEA NOT NULL,
        storage_path TEXT NOT NULL,
        is_deleted BOOLEAN DEFAULT FALSE,
        is_favorite BOOLEAN DEFAULT FALSE,
        uploaded_at TIMESTAMP DEFAULT NOW()
      );

      -- –¢–∞–±–ª–∏—Ü–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ –æ—Ç ML-—Å–µ—Ä–≤–∏—Å–∞
      CREATE TABLE IF NOT EXISTS processed_videos (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        video_id UUID UNIQUE REFERENCES uploaded_videos(id) ON DELETE CASCADE,
        processed_video BYTEA NOT NULL,
        processed_at TIMESTAMP DEFAULT NOW()
      );

      -- –¢–∞–±–ª–∏—Ü–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏ (JSON –æ—Ç—á—ë—Ç)
      CREATE TABLE IF NOT EXISTS detection_results (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        video_id UUID UNIQUE REFERENCES uploaded_videos(id) ON DELETE CASCADE,
        detection_json JSONB NOT NULL,
        detection_accuracy FLOAT CHECK (detection_accuracy BETWEEN 0 AND 1),
        reviewed BOOLEAN DEFAULT FALSE,
        reviewer_id UUID REFERENCES users(id) ON DELETE SET NULL,
        reviewed_at TIMESTAMP
      );

      -- –¢–∞–±–ª–∏—Ü–∞ –ª–æ–≥–æ–≤ (–¥–ª—è –±—É–¥—É—â–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –∞—É–¥–∏—Ç–∞)
      CREATE TABLE IF NOT EXISTS logs (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        user_id UUID REFERENCES users(id) ON DELETE SET NULL,
        action TEXT NOT NULL,
        description TEXT,
        created_at TIMESTAMP DEFAULT NOW()
      );
    `);

    console.log("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã:", error.message);
  } finally {
    pool.end(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
  }
};

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
initializeDatabase();