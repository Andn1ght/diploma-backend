const DashboardService = require("../services/dashboardService");

class DashboardController {
  // üìã –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤—Å–µ—Ö –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static async getUserVideos(req, res) {
    try {
      const videos = await DashboardService.getUserVideos(req.user.userId);
      console.log(`[DASHBOARD] ‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è –≤–∏–¥–µ–æ (–∫–æ–ª-–≤–æ: ${videos.length}) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${req.user.userId}`);
      res.status(200).json(videos);
    } catch (error) {
      console.error("[DASHBOARD] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –≤–∏–¥–µ–æ:", error.message);
      res.status(500).json({ error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
  }

  // üéûÔ∏è –ü–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∫ –ø–æ—Ç–æ–∫
  static async getProcessedVideo(req, res) {
    try {
      const processedVideo = await DashboardService.getProcessedVideo(req.params.id);
      if (!processedVideo) {
        console.warn(`[VIDEO][STREAM] ‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: ${req.params.id}`);
        return res.status(404).json({ error: "–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" });
      }

      console.log(`[VIDEO][STREAM] ‚úÖ –°—Ç—Ä–∏–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ: ${req.params.id}`);

      res.setHeader("Content-Type", "video/mp4");
      res.setHeader("Content-Length", processedVideo.length);

      const { Readable } = require("stream");
      Readable.from(processedVideo).pipe(res);
    } catch (error) {
      console.error("[VIDEO][STREAM] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç—Ä–∏–º–∏–Ω–≥–µ –≤–∏–¥–µ–æ:", error.message);
      res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –≤–∏–¥–µ–æ" });
    }
  }

  // üìÑ –ü–æ–ª—É—á–∏—Ç—å JSON-–æ—Ç—á—ë—Ç –ø–æ –≤–∏–¥–µ–æ
  static async getDetectionReport(req, res) {
    try {
      const report = await DashboardService.getDetectionReport(req.params.id);
      if (!report) {
        console.warn(`[REPORT] ‚ö†Ô∏è –û—Ç—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${req.params.id}`);
        return res.status(404).json({ error: "–û—Ç—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω" });
      }

      console.log(`[REPORT] ‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç—á—ë—Ç –ø–æ –≤–∏–¥–µ–æ: ${req.params.id}`);

      res.status(200).json(report);
    } catch (error) {
      console.error("[REPORT] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç—á—ë—Ç–∞:", error.message);
      res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
  }

  // üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤–∏–¥–µ–æ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  static async deleteVideo(req, res) {
    try {
      await DashboardService.deleteVideo(req.params.id);
      console.log(`[VIDEO][DELETE] üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –≤–∏–¥–µ–æ –∏ –æ—Ç—á—ë—Ç—ã: ${req.params.id}`);
      res.status(200).json({ message: "–í–∏–¥–µ–æ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã" });
    } catch (error) {
      console.error("[VIDEO][DELETE] ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error.message);
      res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
  }

  // ‚≠ê –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
  static async getFavorites(req, res) {
    try {
      const favorites = await DashboardService.getFavoriteVideos(req.user.userId);
      console.log(`[FAVORITE] ‚≠ê –ü–æ–ª—É—á–µ–Ω–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ: ${favorites.length}`);
      res.status(200).json(favorites);
    } catch (error) {
      console.error("[FAVORITE] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:", error.message);
      res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
  }

  // üïò –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static async getRecent(req, res) {
    try {
      const limit = parseInt(req.query.limit) || 5;
      const recent = await DashboardService.getRecentVideos(req.user.userId, limit);
      console.log(`[DASHBOARD] üïò –ü–æ–ª—É—á–µ–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ ${limit} –≤–∏–¥–µ–æ`);
      res.status(200).json(recent);
    } catch (error) {
      console.error("[DASHBOARD] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∏–¥–µ–æ:", error.message);
      res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
  }

  // ‚≠ê –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–ª–∏ —Å–Ω—è—Ç—å "–∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
  static async toggleFavorite(req, res) {
    try {
      const { value } = req.body;
      const result = await DashboardService.toggleFavorite(req.params.id, value);

      console.log(`[FAVORITE] ${value ? "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ" : "‚ùå –£–¥–∞–ª–µ–Ω–æ"} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ${req.params.id}`);

      res.status(200).json(result);
    } catch (error) {
      console.error("[FAVORITE] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:", error.message);
      res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
  }
}

module.exports = DashboardController;