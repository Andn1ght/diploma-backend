const AuthService = require("../services/authService");
const { validationResult } = require("express-validator");

class AuthController {
  // üìå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static async register(req, res) {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      console.warn("[AUTH][REGISTER] ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:", errors.array());
      return res.status(400).json({ errors: errors.array() });
    }

    try {
      const user = await AuthService.register(req.body.username, req.body.email, req.body.password);

      console.log(`[AUTH][REGISTER] ‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${user.username} (${user.email})`);

      res.status(201).json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω", user });
    } catch (error) {
      console.error("[AUTH][REGISTER] ‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", error.message);
      res.status(500).json({ error: error.message });
    }
  }

  // üìå –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static async login(req, res) {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      console.warn("[AUTH][LOGIN] ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:", errors.array());
      return res.status(400).json({ errors: errors.array() });
    }

    try {
      const { token, user } = await AuthService.login(req.body.email, req.body.password);
      res.status(200).json({ message: "–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ", token, user });
    } catch (error) {
      console.warn(`[AUTH][LOGIN] ‚ùå –ù–µ—É–¥–∞—á–Ω—ã–π –≤—Ö–æ–¥ –¥–ª—è email: ${req.body.email}`);
      res.status(401).json({ error: error.message });
    }
  }
}

module.exports = AuthController;