const jwt = require("jsonwebtoken");

// üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
const authenticateUser = (req, res, next) => {
  const token = req.header("Authorization");

  if (!token) {
    console.warn("[AUTH] ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization");
    return res.status(401).json({ error: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω." });
  }

  try {
    // –£–¥–∞–ª—è–µ–º 'Bearer ' –∏–∑ —Ç–æ–∫–µ–Ω–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const parsedToken = token.replace("Bearer ", "");

    // –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞
    const decoded = jwt.verify(parsedToken, process.env.JWT_SECRET);

    // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –æ–±—ä–µ–∫—Ç—É –∑–∞–ø—Ä–æ—Å–∞
    req.user = decoded;

    console.log(`[AUTH] ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${decoded.userId} (—Ä–æ–ª—å: ${decoded.role})`);

    next();
  } catch (error) {
    console.warn("[AUTH] ‚ùå –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω");
    res.status(401).json({ error: "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω" });
  }
};

// üéØ Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π (RBAC)
const authorizeRoles = (...allowedRoles) => {
  return (req, res, next) => {
    if (!allowedRoles.includes(req.user.role)) {
      console.warn(`[AUTH][RBAC] ‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω –¥–ª—è —Ä–æ–ª–∏: ${req.user.role}`);
      return res.status(403).json({ error: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤" });
    }

    console.log(`[AUTH][RBAC] ‚úÖ –†–æ–ª—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∞: ${req.user.role}`);
    next();
  };
};

module.exports = { authenticateUser, authorizeRoles };