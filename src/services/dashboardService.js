const VideoRepository = require("../repositories/videoRepository");
const ProcessedVideoRepository = require("../repositories/processedVideoRepository");
const DetectionReportRepository = require("../repositories/detectionReportRepository");

class DashboardService {
  // üìã –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static async getUserVideos(userId) {
    const videos = await VideoRepository.getUserVideos(userId);
    console.log(`[SERVICE][DASHBOARD] üìã –ò—Å—Ç–æ—Ä–∏—è –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} ‚Äî ${videos.length} —à—Ç.`);
    return videos;
  }

  // üéûÔ∏è –ü–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ
  static async getProcessedVideo(videoId) {
    const video = await ProcessedVideoRepository.getProcessedVideo(videoId);
    console.log(`[SERVICE][VIDEO] üéûÔ∏è –ü–æ–ª—É—á–µ–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ: ${videoId}`);
    return video;
  }

  // üìÑ –ü–æ–ª—É—á–∏—Ç—å JSON-–æ—Ç—á—ë—Ç
  static async getDetectionReport(videoId) {
    const report = await DetectionReportRepository.getDetectionReport(videoId);
    console.log(`[SERVICE][REPORT] üìÑ –ü–æ–ª—É—á–µ–Ω –æ—Ç—á—ë—Ç –¥–ª—è –≤–∏–¥–µ–æ: ${videoId}`);
    return report;
  }

  // üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  static async deleteVideo(videoId) {
    await ProcessedVideoRepository.deleteProcessedVideo(videoId);
    await DetectionReportRepository.deleteDetectionReport(videoId);
    await VideoRepository.deleteVideo(videoId);
    console.log(`[SERVICE][DELETE] üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –≤–∏–¥–µ–æ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${videoId}`);
    return { message: "–í–∏–¥–µ–æ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã" };
  }

  // ‚≠ê –ü–æ–ª—É—á–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static async getFavoriteVideos(userId) {
    const favorites = await VideoRepository.getFavorites(userId);
    console.log(`[SERVICE][FAVORITE] ‚≠ê –ü–æ–ª—É—á–µ–Ω–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ: ${favorites.length} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    return favorites;
  }

  // üïò –ü–æ—Å–ª–µ–¥–Ω–∏–µ N –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static async getRecentVideos(userId, limit = 5) {
    const recent = await VideoRepository.getRecentUserVideos(userId, limit);
    console.log(`[SERVICE][RECENT] üïò –ü–æ—Å–ª–µ–¥–Ω–∏–µ ${limit} –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    return recent;
  }

  // ‚≠ê –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å "–∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
  static async toggleFavorite(videoId, value) {
    const result = await VideoRepository.toggleFavorite(videoId, value);
    console.log(`[SERVICE][FAVORITE] ${value ? "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ" : "‚ùå –£–¥–∞–ª–µ–Ω–æ"} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ${videoId}`);
    return result;
  }
}

module.exports = DashboardService;